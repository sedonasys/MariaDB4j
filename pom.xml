<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.vorburger.mariaDB4j</groupId>
	<artifactId>mariaDB4j</artifactId>
	<version>2.1.3-sedonasys</version>

	<name>MariaDB4j</name>
	<description>Java wrapper / launcher for MariaDB (or MySQL)</description>
	<url>https://github.com/vorburger/MariaDB4j</url>
	<inceptionYear>2012</inceptionYear>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
		<license>
			<name>Eclipse Public License v1.0</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>https://github.com/vorburger/MariaDB4j.git</connection>
		<developerConnection>scm:git:git@github.com:vorburger/MariaDB4j.git</developerConnection>
		<url>https://github.com/vorburger/MariaDB4j</url>
	  <tag>mariaDB4j-2.1.3</tag>
  </scm>

    <organization>
	    <name>Michael Vorburger</name>
	    <url>http://www.vorburger.ch</url>
    </organization>

	<developers>
		<developer>
			<id>vorburger</id>
			<name>Michael Vorburger</name>
			<email>mike@vorburger.ch</email>
			<url>http://www.vorburger.ch</url>
		</developer>
	</developers>

	<properties>
		 <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		 <spring.version>4.0.7.RELEASE</spring.version>
		 <springboot.version>1.1.9.RELEASE</springboot.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
<!-- 				
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
 -->			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
				<configuration>
				    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
					<!--https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven 
						http://jira.codehaus.org/browse/MGPG-9 & http://jira.codehaus.org/browse/MRELEASE-263 -->
					<mavenExecutorId>forked-path</mavenExecutorId>
				</configuration>
			</plugin>
			
			<!-- This enables executable JAR: (It adds ca. 6 MB to JAR size; if that's a prob. create two outputs later..) -->
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <version>${springboot.version}</version>
	            <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                	<mainClass>ch.vorburger.mariadb4j.springframework.boot.MariaDB4jApplication</mainClass>
                </configuration>
	        </plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.7</version>
                <configuration>
                    <licenseName>apache_v2</licenseName>
                    <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                    <failOnMissingHeader>true</failOnMissingHeader>
                    <failOnNotUptodateHeader>true</failOnNotUptodateHeader>
                    <roots>
                        <root>src/main/java</root>
                        <root>src/test/java</root>
                    </roots>
                </configuration>
				<executions>
				    <execution>
				        <phase>validate</phase>
				        <goals>
				            <goal>check-file-header</goal>
				        </goals>
				    </execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.3</version>
				<configuration>
				  <!-- This is super important (to avoid the binaries in the *-sources.jar) -->
				  <excludeResources>true</excludeResources>
				 <includePom>true</includePom>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
                      <version>2.9.1</version>
                      <configuration>
                          <quiet>true</quiet>
                      </configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>
												check-file-header
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
	     <dependencies>
	        <dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-dependencies</artifactId>
	            <version>${springboot.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>

	<dependencies>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>1.1.7</version>
            <scope>test</scope>
        </dependency>
<!--   <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.34</version>
			<! - - For legal reasons (GPL with FOSS Exception story...), it's safest 
				if projects using mariaDB4j decide this dependency themselves. If we have 
				to use it in src/main/java instead of only src/test/java, then let's use 
				<scope>provided</scope> - - >
			<scope>test</scope>
		</dependency> -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<!-- Just for its CircularFifoBuffer... -->
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<!-- For ClasspathUnpacker -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<!-- For MariaDB4jSpringService -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<optional>true</optional> <!-- !!! -->
		</dependency>
		<dependency>
			<!-- For MariaDB4jApplication -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<optional>true</optional> <!-- !!! -->
		</dependency>
		<dependency>
			<!-- For MariaDB4jApplicationTest -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- For ClasspathUnpacker -->
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
 
	<distributionManagement>
		<repository>
			<id>bintray-vorburger-maven-MariaDB4j</id>
			<name>vorburger-maven-MariaDB4j</name>
			<url>https://api.bintray.com/maven/vorburger/maven/MariaDB4j</url>
		</repository>
	</distributionManagement>

</project>
